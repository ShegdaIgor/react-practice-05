{"ast":null,"code":"var _jsxFileName = \"/Users/yuliyabazavluk/Downloads/react-05-routing-practice/react-practice-05/src/pages/PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { fetchPostDetails } from \"services/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetails() {\n  _s();\n\n  const [postDetails, setPostDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    const getPostsDetails = async postId => {\n      try {\n        setIsLoading(true);\n        const post = await fetchPostDetails(postId);\n        setPostDetails(post);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPostsDetails(postId);\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }, this), postDetails !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"userId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), \": \", postDetails.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), \": \", postDetails.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), \": \", postDetails.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \": \", postDetails.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"comments\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"comments\",\n        element: \"postcomments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostDetails, \"jPslaUFGpr2GAOMQGDQJZroDZzQ=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/Users/yuliyabazavluk/Downloads/react-05-routing-practice/react-practice-05/src/pages/PostDetails.jsx"],"names":["React","useEffect","useState","Link","useParams","fetchPostDetails","PostDetails","postDetails","setPostDetails","isLoading","setIsLoading","error","setError","postId","getPostsDetails","post","message","userId","id","title","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,gBAAT,QAAiC,cAAjC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,eAAe,GAAG,MAAMD,MAAN,IAAgB;AACpC,UAAI;AACAH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMK,IAAI,GAAG,MAAMV,gBAAgB,CAACQ,MAAD,CAAnC;AACAL,QAAAA,cAAc,CAACO,IAAD,CAAd;AACH,OAJD,CAIE,OAAOJ,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAK,CAACK,OAAP,CAAR;AACH,OAND,SAMU;AACNN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAVD;;AAWAI,IAAAA,eAAe,CAACD,MAAD,CAAf;AACH,GAbQ,EAaN,CAACA,MAAD,CAbM,CAAT;AAcA,sBACI;AAAA,eACKJ,SAAS,KAAK,IAAd,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD3B,EAEKF,WAAW,KAAK,IAAhB,iBACG;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACoBA,WAAW,CAACU,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACgBV,WAAW,CAACW,EAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACmBX,WAAW,CAACY,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACkBZ,WAAW,CAACa,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAkBI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI,QAAC,MAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA9CQd,W;UAKcF,S;;;KALdE,W;AAgDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { fetchPostDetails } from \"services/Api\";\n\nfunction PostDetails() {\n    const [postDetails, setPostDetails] = useState(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { postId } = useParams();\n\n    useEffect(() => {\n        const getPostsDetails = async postId => {\n            try {\n                setIsLoading(true);\n                const post = await fetchPostDetails(postId);\n                setPostDetails(post);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        getPostsDetails(postId);\n    }, [postId]);\n    return (\n        <div>\n            {isLoading === true && <p>loading ...</p>}\n            {postDetails !== null && (\n                <div>\n                    <p>\n                        <b>userId</b>: {postDetails.userId}\n                    </p>\n                    <p>\n                        <b>id</b>: {postDetails.id}\n                    </p>\n                    <p>\n                        <b>title</b>: {postDetails.title}\n                    </p>\n                    <p>\n                        <b>body</b>: {postDetails.body}\n                    </p>\n                </div>\n            )}\n            <Link to='comments'>Comments</Link>\n            <Routes>\n                <Route path='comments' element='postcomments' />\n            </Routes>\n        </div>\n    );\n}\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}