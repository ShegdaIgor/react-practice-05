{"ast":null,"code":"var _jsxFileName = \"/Users/yuliyabazavluk/Downloads/react-05-routing-practice/react-practice-05/src/pages/PostComments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchPostComments } from \"services/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostComments() {\n  _s();\n\n  const [postComments, setPostComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    const getPostComments = async postId => {\n      try {\n        setIsLoading(true);\n        const comments = await fetchPostComments(postId);\n        setPostComments(comments);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPostComments(postId);\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), Array.isArray(postComments) && postComments.map(_ref => {\n        let {\n          id,\n          name,\n          email,\n          body\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Name: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), \" \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Body:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), \" \", body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostComments, \"+lXEB96J8s94IPf5MXseovQXXCo=\", false, function () {\n  return [useParams];\n});\n\n_c = PostComments;\nexport default PostComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComments\");","map":{"version":3,"sources":["/Users/yuliyabazavluk/Downloads/react-05-routing-practice/react-practice-05/src/pages/PostComments.jsx"],"names":["React","useEffect","useState","useParams","fetchPostComments","PostComments","postComments","setPostComments","isLoading","setIsLoading","error","setError","postId","getPostComments","comments","message","Array","isArray","map","id","name","email","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,cAAlC;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,eAAe,GAAG,MAAMD,MAAN,IAAgB;AACpC,UAAI;AACAH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMK,QAAQ,GAAG,MAAMV,iBAAiB,CAACQ,MAAD,CAAxC;AACAL,QAAAA,eAAe,CAACO,QAAD,CAAf;AACH,OAJD,CAIE,OAAOJ,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAK,CAACK,OAAP,CAAR;AACH,OAND,SAMU;AACNN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAVD;;AAWAI,IAAAA,eAAe,CAACD,MAAD,CAAf;AACH,GAbQ,EAaN,CAACA,MAAD,CAbM,CAAT;AAcA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKI,KAAK,CAACC,OAAN,CAAcX,YAAd,KACGA,YAAY,CAACY,GAAb,CAAiB,QAA+B;AAAA,YAA9B;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,KAAZ;AAAmBC,UAAAA;AAAnB,SAA8B;AAC5C,4BACI;AAAc,UAAA,SAAS,EAAC,SAAxB;AAAA,kCACI;AAAA,iCAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,OACmBC,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,OACkBC,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAAUH,EAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA1CQd,Y;UAKcF,S;;;KALdE,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchPostComments } from \"services/Api\";\n\nfunction PostComments() {\n    const [postComments, setPostComments] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { postId } = useParams();\n\n    useEffect(() => {\n        const getPostComments = async postId => {\n            try {\n                setIsLoading(true);\n                const comments = await fetchPostComments(postId);\n                setPostComments(comments);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        getPostComments(postId);\n    }, [postId]);\n    return (\n        <div>\n            <div className='details'>\n                <h3>Comments</h3>\n                {Array.isArray(postComments) &&\n                    postComments.map(({ id, name, email, body }) => {\n                        return (\n                            <div key={id} className='comment'>\n                                <h4>Name: {name}</h4>\n                                <p>\n                                    <b>Email:</b> {email}\n                                </p>\n                                <p>\n                                    <b>Body:</b> {body}\n                                </p>\n                            </div>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n\nexport default PostComments;\n"]},"metadata":{},"sourceType":"module"}